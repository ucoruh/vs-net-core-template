name: .NET Windows + Doxygen + Test +  Release

on:
  push:
    #branches:
    #  - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    #runs-on: windows-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    steps:
      - name: Checkout Source Code from Github
        uses: actions/checkout@v2
        
      - name: Setup .NET Core # Required to execute ReportGenerator
        uses: actions/setup-dotnet@v3
        #with:
        #  dotnet-version: 6.x
        #  dotnet-quality: 'ga'
        
      - name: Install Doxygen
        run: sudo apt-get install doxygen -y
        shell: bash

      - name: Generate Documentation
        run: doxygen Doxyfile

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./CalculatorLibrary.Tests

      - name: Install coverlet.msbuild
        run: dotnet add package coverlet.msbuild --version 3.1.0
        working-directory: ./CalculatorLibrary.Tests

      - name: Build
        run: dotnet build --configuration Release
        working-directory: ./CalculatorLibrary.Tests

      - name: Test with Coverage
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory:./TestResults --logger:trx
        working-directory: ./CalculatorLibrary.Tests

      - name: Generate Coverage Report
        run: reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html

      #- name: ReportGenerator
      #  uses: danielpalme/ReportGenerator-GitHub-Action@5.1.20
      #  with:
      #    reports: CalculatorLibrary.Tests/**/coverage.cobertura.xml
      #    targetdir: coveragereport
      #    reporttypes: Html;Html_Light;Html_Dark;Html_BlueRed;HtmlSummary;XML;XMLSummary;JsonSummary;Latex;TextSummary;TextDeltaSummary;MarkdownSummary;MarkdownSummaryGithub;MarkdownDeltaSummary;PngChart;Badges
      #    historydir: report_history
      #    filefilters: +cs;+java;+h;+cpp;+c
      #    title: 'Calculator Library Project Test Coverage'
        
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: CalculatorLibrary.Tests/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
          
      - name: Upload Code Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-results
          path: code-coverage-results.md

      - name: Build/Publish for Windows
        run: dotnet publish -c Release -r win-x64 --self-contained true -o publish/windows

      - name: Get Commit Summary
        id: commit_summary
        run: echo "::set-output name=summary::$(git log --format=%B -n 10 ${{ github.sha }})"

      - name: Create Release
        id: create_common_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NET_CORE_TEMPLATE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            ${{ steps.commit_summary.outputs.summary }}
            
            Dr. Ugur CORUH
          draft: false
          prerelease: false

      - name: Compress Windows binaries
        run: tar -czvf windows-binaries.tar.gz -C publish/windows .
        
      - name: Compress Windows Test Coverage Report
        run: tar -czvf test-coverage-html.tar.gz -C coveragereport .
        
      - name: Compress Doxygen Output (Html/Xml/Latex)
        run: tar -czvf doxygen-output-html-xml-latex-rtf.tar.gz -C doxygen-output .
                
      - name: Upload Windows Binaries to release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_common_release.outputs.upload_url }}
          asset_path: ./windows-binaries.tar.gz
          asset_name: windows-binaries.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.NET_CORE_TEMPLATE_TOKEN }}

      - name: Upload Test Converage HTML Report to release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_common_release.outputs.upload_url }}
          asset_path: ./test-coverage-html.tar.gz
          asset_name: test-coverage-html.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.NET_CORE_TEMPLATE_TOKEN }}
          
          
      - name: Upload Doxygen Output to release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_common_release.outputs.upload_url }}
          asset_path: ./doxygen-output-html-xml-latex-rtf.tar.gz
          asset_name: doxygen-output-html-xml-latex-rtf.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.NET_CORE_TEMPLATE_TOKEN }}

      # https://github.com/peaceiris/actions-gh-pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.NET_CORE_TEMPLATE_TOKEN }}
          publish_dir: ./doxygen-output/html
